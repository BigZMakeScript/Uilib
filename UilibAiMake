local UILibrary = {}

function UILibrary:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.Name = "CustomUI"

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title or "UI Library"
    TitleLabel.TextSize = 18
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.Parent = MainFrame

    local TabHolder = Instance.new("Frame")
    TabHolder.Size = UDim2.new(1, 0, 0, 30)
    TabHolder.Position = UDim2.new(0, 0, 0, 40)
    TabHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TabHolder.Parent = MainFrame

    local TabContent = Instance.new("Frame")
    TabContent.Size = UDim2.new(1, 0, 1, -70)
    TabContent.Position = UDim2.new(0, 0, 0, 70)
    TabContent.BackgroundTransparency = 1
    TabContent.Parent = MainFrame

    local UI = {MainFrame = MainFrame, ScreenGui = ScreenGui, Tabs = {}, CurrentTab = nil}

    function UI:CreateTab(tabName)
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(0, 100, 1, 0)
        TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        TabButton.Text = tabName
        TabButton.TextSize = 14
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Parent = TabHolder

        local TabFrame = Instance.new("Frame")
        TabFrame.Size = UDim2.new(1, 0, 1, 0)
        TabFrame.BackgroundTransparency = 1
        TabFrame.Visible = false
        TabFrame.Parent = TabContent

        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = TabFrame
        UIListLayout.Padding = UDim.new(0, 5)
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

        local Tab = {Frame = TabFrame}

        function Tab:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -10, 0, 40)
            Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            Button.Text = text
            Button.TextSize = 16
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.Font = Enum.Font.Gotham
            Button.Parent = TabFrame

            Button.MouseButton1Click:Connect(function()
                if callback then
                    callback()
                end
            end)
        end

        function Tab:CreateToggle(text, callback)
            local Toggle = Instance.new("TextButton")
            Toggle.Size = UDim2.new(1, -10, 0, 40)
            Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            Toggle.Text = text .. " [OFF]"
            Toggle.TextSize = 16
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.Font = Enum.Font.Gotham
            Toggle.Parent = TabFrame

            local isOn = false
            Toggle.MouseButton1Click:Connect(function()
                isOn = not isOn
                Toggle.Text = text .. (isOn and " [ON]" or " [OFF]")
                if callback then
                    callback(isOn)
                end
            end)
        end

        function Tab:CreateLabel(text)
            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(1, -10, 0, 30)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextSize = 14
            Label.TextColor3 = Color3.fromRGB(200, 200, 200)
            Label.Font = Enum.Font.Gotham
            Label.Parent = TabFrame
        end

        TabButton.MouseButton1Click:Connect(function()
            if UI.CurrentTab then
                UI.CurrentTab.Frame.Visible = false
            end
            TabFrame.Visible = true
            UI.CurrentTab = Tab
        end)

        if not UI.CurrentTab then
            UI.CurrentTab = Tab
            TabFrame.Visible = true
        end

        table.insert(UI.Tabs, Tab)
        return Tab
    end

    return UI
end

return UILibrary
